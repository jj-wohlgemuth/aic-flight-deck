name: Build and Release App
on:
  push:
    tags:
      - "*"
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-macos:
    runs-on: macos-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install .
          pip install pyinstaller
          pip install certifi
      - name: Build executable
        run: |
          source .venv/bin/activate
          pyinstaller run_gui.spec
      - name: Add icon to executable
        run: |
          APP_PATH="dist/AIC Flight Deck"
          Rez lark.rsrc -o "$APP_PATH"
          SetFile -a C "$APP_PATH"
      - name: Compress artifact
        run: |
          tar -czvf mac-dist.tar.gz -C dist .
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: mac-dist.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-windows:
    runs-on: windows-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m venv .venv
          .venv\Scripts\activate
          pip install --upgrade pip
          pip install .
          pip install pyinstaller
          pip install certifi
      - name: Build executable
        run: |
          .venv\Scripts\activate
          pyinstaller run_gui.spec
      - name: Compress artifact
        run: |
          tar -czvf windows-dist.tar.gz -C dist .
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: windows-dist.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-linux:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install GTK dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-gi gir1.2-gtk-3.0 libcairo2-dev
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install .
          pip install pyinstaller
          pip install certifi
            pip install PyGObject
      - name: Build executable
        run: |
          source .venv/bin/activate
          pyinstaller run_gui.spec
      - name: Compress artifact
        run: |
          tar -czvf linux-dist.tar.gz -C dist .
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: linux-dist.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
